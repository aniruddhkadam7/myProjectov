<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd 
          http://www.springframework.org/schema/jee
     http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">

<!--    <bean id="hornetConnectionFactory" class="org.hornetq.jms.client.HornetQJMSConnectionFactory">
        <constructor-arg index="0" value="false" />
        <constructor-arg>
            <bean class="org.hornetq.api.core.TransportConfiguration">
                <constructor-arg
                    value="org.hornetq.core.remoting.impl.netty.NettyConnectorFactory" />
                <constructor-arg>
                    <map key-type="java.lang.String" value-type="java.lang.Object">
                         HornetQ standalone instance details 
                        <entry key="host" value="localhost"></entry>
                        <entry key="port" value="5445"></entry>
                    </map>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>
    
    <bean id="userCredsConnectionFactory" class="org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter">
        <property name="targetConnectionFactory">
            <ref bean="hornetConnectionFactory"/>
        </property>
        <property name="username">
            <value>jmsuser</value>
        </property>
        <property name="password">
            <value>jmsuser</value>
        </property>
         use credentials of some user you have added in 'jmsrole' group as application
        user in jboss in the above config 
    </bean>
    
    <bean id="connectionFactory"
    class="org.springframework.jms.connection.CachingConnectionFactory">
    <constructor-arg ref="userCredsConnectionFactory"/>
</bean>-->

    <!-- ConnectionFactory Definition -->
<!--    <bean id="prodConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <constructor-arg ref="hornetConnectionFactory" />
    </bean>-->
    
    <jee:jndi-lookup id="connectionFactory" jndi-name="java:/ConnectionFactory"/>
    <jee:jndi-lookup id="defaultDestination" jndi-name="java:/jms/queue/demoQueue"/>

    <!-- Definition of the JMS queue -->
<!--    <bean id="defaultDestination" class="org.hornetq.jms.client.HornetQQueue">
        <constructor-arg index="0" value="demoQueue"/>
    </bean>-->

    <bean id="producerTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="defaultDestination" ref="defaultDestination" />
    </bean>
    <bean id="messageReceiver" class="com.raybiztech.mail.receiver.MessageReceiverImpl" />
    <bean id="messageHandler" class="com.raybiztech.mail.service.CommonMailHandler" />
    <bean id="errorHandler"     class="com.raybiztech.mail.service.SomeHandler" />
    <bean id="incommingMessageListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="errorHandler" ref="errorHandler"/>
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destination" ref="defaultDestination" />
        <property name="messageListener" ref="messageReceiver" />
        <property name="recoveryInterval" value="10000" />
		
    </bean>

    <bean id="messageSender" class="com.raybiztech.mail.sender.MessageSenderImpl">
        <property name="jmsTemplate" ref="producerTemplate" />
    </bean>

</beans>